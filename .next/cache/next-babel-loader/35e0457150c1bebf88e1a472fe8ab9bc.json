{"ast":null,"code":"var _jsxFileName = \"/Users/horsthoyzer/Desktop/cryptofrontend/src/pages/RegistrationScreen.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { jsx } from 'theme-ui';\nimport { Container, Box, Heading, Text, Image, Button } from 'theme-ui'; // RegEx (Regular Expressions)\n\nconst validateEmail = email => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\n\nconst validatePassword = password => {\n  const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}$/;\n  return re.test(password);\n};\n\nfunction RegistrationScreen() {\n  // \"initial\", \"sending\", \"successful\", \"unsuccessful\", \"validation error\"\n  const {\n    0: state,\n    1: setState\n  } = useState(\"initial\");\n  const {\n    0: errorsState,\n    1: setErrorsState\n  } = useState([]); // Declare undefined variables for later assignment (ref props)\n\n  let avatarField;\n  let firstNameField;\n  let lastNameField;\n  let emailField;\n  let passwordField;\n  let contactField;\n  let addressField; // To instantiate a FormData object\n\n  const formData = new FormData();\n\n  const attachFile = evt => {\n    // Create an array for the files attached\n    const files = Array.from(evt.target.files); // Append each file to the formData\n\n    files.forEach((file, index) => {\n      formData.append(index, file);\n    });\n  };\n\n  const register = () => {\n    const errors = []; // 1. Validate the fields\n\n    if (firstNameField.value.length == 0) {\n      errors.push(\"Please enter your first name\");\n    }\n\n    if (lastNameField.value.length == 0) {\n      errors.push(\"Please enter your last name\");\n    }\n\n    if (!validateEmail(emailField.value)) {\n      errors.push(\"Please enter a valid email address\");\n    }\n\n    if (!validatePassword(passwordField.value)) {\n      errors.push(\"Please enter a valid password\");\n    } // 1.1 If there are errors, set the state to \"validation error\"\n\n\n    if (errors.length > 0) {\n      setState(\"validation error\"); // Populate the alert box with the errors\n\n      setErrorsState(errors);\n    } // 1.2 If there are no errors, set the state to \"sending\"\n    else {\n        setState(\"sending\");\n        setErrorsState([]);\n        formData.append('firstName', firstNameField.value);\n        formData.append('lastName', lastNameField.value);\n        formData.append('email', emailField.value);\n        formData.append('password', passwordField.value);\n        formData.append('contactNumber', contactField.value);\n        formData.append('address', addressField.value);\n        fetch(`${process.env.REACT_APP_API_ENDPOINT}/user/add`, {\n          method: 'POST',\n          //headers: {\"Content-Type\": \"application/json\"},\n          body: formData\n        }) // 2.1 If the submission is successful, set the state \"successful\"\n        .then(backendResponse => backendResponse.json()).then(theJson => {\n          console.log(theJson);\n          setState(\"successful\");\n        }) // 2.2 If the submission is unsuccessful, set the state \"unsuccessful\"\n        .catch(error => {\n          console.log(error);\n          setState(\"unsuccessful\");\n        });\n      }\n  };\n\n  return __jsx(\"section\", {\n    sx: styles.banner,\n    id: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    sx: styles.banner.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    sx: styles.banner.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    className: \"py-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Registration\"), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    for: \"avatar\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Avatar\"), __jsx(\"input\", {\n    onChange: attachFile,\n    ref: elem => avatarField = elem,\n    type: \"file\",\n    className: \"form-control\",\n    id: \"avatar\",\n    \"aria-describedby\": \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    for: \"firstName\",\n    className: \"form-label\",\n    sx: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    ref: elem => firstNameField = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"firstName\",\n    \"aria-describedby\": \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    for: \"lastName\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    ref: elem => lastNameField = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"lastName\",\n    \"aria-describedby\": \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    for: \"email\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    ref: elem => emailField = elem,\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    id: \"emailHelp\",\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"We'll never share your email with anyone else.\")), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    for: \"password\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    ref: elem => passwordField = elem,\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password\",\n    \"aria-describedby\": \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    for: \"contactNumber\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \"Contact Number\"), __jsx(\"input\", {\n    ref: elem => contactField = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"contactNumber\",\n    \"aria-describedby\": \"contactNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    for: \"address\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, \"Address\"), __jsx(\"input\", {\n    ref: elem => addressField = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"address\",\n    \"aria-describedby\": \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  })), state !== \"sending\" && state !== \"successful\" && __jsx(\"button\", {\n    onClick: register,\n    className: \"btn btn-primary mb-3\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Submit\"), state === \"validation error\" && __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, errorsState.map(error => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 44\n    }\n  }, error)))), state === \"successful\" && __jsx(\"div\", {\n    className: \"alert alert-success\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, \"You have registered successfully!\"), state === \"unsuccessful\" && __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, \"Internal error. Please try again later.\"), state === \"sending\" && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \"Loading...\"))));\n}\n\n;\nexport default RegistrationScreen;","map":{"version":3,"sources":["/Users/horsthoyzer/Desktop/cryptofrontend/src/pages/RegistrationScreen.js"],"names":["React","useState","jsx","Container","Box","Heading","Text","Image","Button","validateEmail","email","re","test","validatePassword","password","RegistrationScreen","state","setState","errorsState","setErrorsState","avatarField","firstNameField","lastNameField","emailField","passwordField","contactField","addressField","formData","FormData","attachFile","evt","files","Array","from","target","forEach","file","index","append","register","errors","value","length","push","fetch","process","env","REACT_APP_API_ENDPOINT","method","body","then","backendResponse","json","theJson","console","log","catch","error","styles","banner","container","elem","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { jsx } from 'theme-ui';\nimport { Container, Box, Heading, Text, Image, Button } from 'theme-ui';\n\n\n// RegEx (Regular Expressions)\nconst validateEmail = (email) => {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst validatePassword = (password) => {\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}$/;\n    return re.test(password);\n}\n\n\n\n\n\n\n\nfunction RegistrationScreen() {\n\n    // \"initial\", \"sending\", \"successful\", \"unsuccessful\", \"validation error\"\n    const [state, setState] = useState(\"initial\"); \n    const [errorsState, setErrorsState] = useState([]);\n\n    // Declare undefined variables for later assignment (ref props)\n    let avatarField;\n    let firstNameField;\n    let lastNameField;\n    let emailField;\n    let passwordField;\n    let contactField;\n    let addressField;\n\n    // To instantiate a FormData object\n    const formData = new FormData();\n\n    const attachFile = (evt) => {\n\n        // Create an array for the files attached\n        const files = Array.from(evt.target.files);\n\n        // Append each file to the formData\n        files.forEach(\n            (file, index) => {\n                formData.append(index, file);\n            }\n        )\n    }\n\n    const register = () => {\n\n        const errors = [];\n\n        // 1. Validate the fields\n        if(firstNameField.value.length == 0) {\n            errors.push(\"Please enter your first name\");\n        }\n        if(lastNameField.value.length == 0) {\n            errors.push(\"Please enter your last name\");\n        }\n        if(!validateEmail(emailField.value)) {\n            errors.push(\"Please enter a valid email address\");\n        }\n        if(!validatePassword(passwordField.value)) {\n            errors.push(\"Please enter a valid password\");\n        }\n\n        // 1.1 If there are errors, set the state to \"validation error\"\n        if(errors.length > 0) {\n            setState(\"validation error\");\n            // Populate the alert box with the errors\n            setErrorsState(errors);\n        }\n        // 1.2 If there are no errors, set the state to \"sending\"\n        else {\n            setState(\"sending\");\n            setErrorsState([]);\n\n            formData.append('firstName', firstNameField.value);\n            formData.append('lastName', lastNameField.value);\n            formData.append('email', emailField.value);\n            formData.append('password', passwordField.value);\n            formData.append('contactNumber', contactField.value);\n            formData.append('address', addressField.value);\n\n            fetch(`${process.env.REACT_APP_API_ENDPOINT}/user/add`, {\n                method: 'POST',\n                //headers: {\"Content-Type\": \"application/json\"},\n                body: formData\n            })\n            // 2.1 If the submission is successful, set the state \"successful\"\n            .then((backendResponse)=> backendResponse.json())\n            .then((theJson)=>{\n                console.log(theJson);\n                setState(\"successful\");\n            })\n            // 2.2 If the submission is unsuccessful, set the state \"unsuccessful\"\n            .catch((error)=>{\n                console.log(error);\n                setState(\"unsuccessful\");\n            });\n        }\n    }\n\n    return (\n        <section sx={styles.banner} id=\"home\">\n            <Container sx={styles.banner.container}>\n            {/* <Box sx={styles.banner.contentBox}>\n            <Heading as=\"h1\" variant=\"heroPrimary\">\n                Want to trade digital currencies like a Pro?\n            </Heading>\n            <Text as=\"p\" variant=\"heroSecondary\">\n                Whether you are new to the world of cryptocurrency or just want to learn more, this webpage is for you. \n            </Text>\n            <Button onClick={() => router.replace('RegistrationScreen')} variant=\"primary\">Explore</Button>\n            </Box>\n            <Box sx={styles.banner.imageBox}>\n            <Image src={BannerImg} alt=\"banner\" />\n            </Box> */}\n        \n                <div className=\"container\" sx={styles.banner.container}>\n\n                    <h1 className=\"py-5\">Registration</h1>\n\n                    <div className=\"mb-3\">\n                        <label for=\"avatar\" className=\"form-label\">Avatar</label>\n                        <input \n                        onChange={attachFile}\n                        ref={ (elem)=>avatarField = elem } type=\"file\" className=\"form-control\" id=\"avatar\" aria-describedby=\"avatar\" />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label for=\"firstName\" className=\"form-label\" sx={styles.container}>First Name</label>\n                        <input ref={ (elem)=>firstNameField = elem } type=\"text\" className=\"form-control\" id=\"firstName\" aria-describedby=\"firstName\" />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label for=\"lastName\" className=\"form-label\">Last Name</label>\n                        <input ref={ (elem)=>lastNameField = elem } type=\"text\" className=\"form-control\" id=\"lastName\" aria-describedby=\"lastName\" />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label for=\"email\" className=\"form-label\">Email address</label>\n                        <input ref={ (elem)=>emailField = elem } type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" />\n                        <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label for=\"password\" className=\"form-label\">Password</label>\n                        <input ref={ (elem)=>passwordField = elem } type=\"password\" className=\"form-control\" id=\"password\" aria-describedby=\"password\" />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label for=\"contactNumber\" className=\"form-label\">Contact Number</label>\n                        <input ref={ (elem)=>contactField = elem } type=\"text\" className=\"form-control\" id=\"contactNumber\" aria-describedby=\"contactNumber\" />\n                    </div>\n\n                    <div className=\"mb-3\">\n                        <label for=\"address\" className=\"form-label\">Address</label>\n                        <input ref={ (elem)=>addressField = elem } type=\"text\" className=\"form-control\" id=\"address\" aria-describedby=\"address\" />\n                    </div>\n\n                    {\n                        state !== \"sending\" && state !== \"successful\" &&\n                        <button \n                        onClick={register}\n                        className=\"btn btn-primary mb-3\" type=\"button\">Submit</button>\n                    }\n\n                    { \n                        state === \"validation error\" &&\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                        <ul>\n                        {\n                            errorsState.map(\n                                (error) => <li>{error}</li>\n                            )\n                        }\n                        </ul>\n                        </div>\n                    }\n\n                    {\n                        state === \"successful\" &&\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            You have registered successfully!\n                        </div>\n                    }\n\n                    {\n                        state === \"unsuccessful\" &&\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            Internal error. Please try again later.\n                        </div>\n                    }\n\n                    {\n                        state === \"sending\" &&\n                        <p>Loading...</p>\n                    }\n\n\n                </div>\n            </Container>\n        </section>\n    )\n\n\n};\n\n\n\n  \n\nexport default RegistrationScreen;"]},"metadata":{},"sourceType":"module"}