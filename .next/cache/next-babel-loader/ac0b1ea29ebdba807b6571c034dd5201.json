{"ast":null,"code":"var _jsxFileName = \"/Users/horsthoyzer/Desktop/cryptofrontend/src/pages/RegistrationScreen.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n/** @jsx jsx */\n\nimport { jsx } from 'theme-ui';\nimport { Container, Box, Heading, Text, Button } from 'theme-ui';\nimport { ThemeProvider } from 'theme-ui';\nimport theme from 'theme';\nimport { useRouter } from 'next/router'; // RegEx (Regular Expressions)\n\nconst validateEmail = email => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\n\nconst validatePassword = password => {\n  const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}$/;\n  return re.test(password);\n};\n\nfunction RegistrationScreen() {\n  // \"initial\", \"sending\", \"successful\", \"unsuccessful\", \"validation error\"\n  const {\n    0: state,\n    1: setState\n  } = useState(\"initial\");\n  const {\n    0: errorsState,\n    1: setErrorsState\n  } = useState([]); // Declare undefined variables for later assignment (ref props)\n\n  let avatarField;\n  let firstNameField;\n  let lastNameField;\n  let emailField;\n  let passwordField;\n  let cryptoField;\n  let addressField; // To instantiate a FormData object\n\n  const formData = new FormData();\n\n  const attachFile = evt => {\n    // Create an array for the files attached\n    const files = Array.from(evt.target.files); // Append each file to the formData\n\n    files.forEach((file, index) => {\n      formData.append(index, file);\n    });\n  };\n\n  const register = () => {\n    const errors = []; // 1. Validate the fields\n\n    if (firstNameField.value.length == 0) {\n      errors.push(\"Please enter your first name\");\n    }\n\n    if (lastNameField.value.length == 0) {\n      errors.push(\"Please enter your last name\");\n    }\n\n    if (!validateEmail(emailField.value)) {\n      errors.push(\"Please enter a valid email address\");\n    }\n\n    if (!validatePassword(passwordField.value)) {\n      errors.push(\"Please enter a valid password\");\n    } // 1.1 If there are errors, set the state to \"validation error\"\n\n\n    if (errors.length > 0) {\n      setState(\"validation error\"); // Populate the alert box with the errors\n\n      setErrorsState(errors);\n    } // 1.2 If there are no errors, set the state to \"sending\"\n    else {\n        setState(\"sending\");\n        setErrorsState([]);\n        formData.append('firstName', firstNameField.value);\n        formData.append('lastName', lastNameField.value);\n        formData.append('email', emailField.value);\n        formData.append('password', passwordField.value);\n        formData.append('cryptoChoice1', cryptoField1.value);\n        formData.append('cryptoChoice2', cryptoField2.value);\n        formData.append('cryptoChoice3', cryptoField3.value);\n        fetch(`http://localhost:3001/user/add`, {\n          method: 'POST',\n          //headers: {\"Content-Type\": \"application/json\"},\n          body: formData\n        }) // 2.1 If the submission is successful, set the state \"successful\"\n        .then(backendResponse => backendResponse.json()).then(theJson => {\n          console.log(theJson);\n          setState(\"successful\");\n        }) // 2.2 If the submission is unsuccessful, set the state \"unsuccessful\"\n        .catch(error => {\n          console.log(error);\n          setState(\"unsuccessful\");\n        });\n      }\n  };\n\n  const router = useRouter();\n  return jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, jsx(\"section\", {\n    sx: styles.banner.container,\n    id: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, jsx(Container, {\n    sx: styles.banner.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, jsx(Box, {\n    sx: styles.contentBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, jsx(Heading, {\n    as: \"h1\",\n    variant: \"heroPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Want to join our network?\"), jsx(Text, {\n    as: \"p\",\n    variant: \"heroSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Please provide below information:\")), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"avatar\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Avatar\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    onChange: attachFile,\n    ref: elem => avatarField = elem,\n    type: \"file\",\n    className: \"form-control\",\n    id: \"avatar\",\n    \"aria-describedby\": \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  })), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"firstName\",\n    className: \"d-flex my-4 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"First Name\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    ref: elem => firstNameField = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"firstName\",\n    \"aria-describedby\": \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  })), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"lastName\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, \"Last Name\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    ref: elem => lastNameField = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"lastName\",\n    \"aria-describedby\": \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  })), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"email\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, \"Email address\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    ref: elem => emailField = elem,\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  })), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"password\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"Password\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    ref: elem => passwordField = elem,\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password\",\n    \"aria-describedby\": \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  })), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"cryptoChoice1\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, \"Crypto Currency Choice 1\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    ref: elem => cryptoField1 = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"cryptoChoice1\",\n    \"aria-describedby\": \"cryptoChoice1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  })), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"cryptoChoice2\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Crypto Currency Choice 2\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    ref: elem => cryptoField2 = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"cryptoChoice2\",\n    \"aria-describedby\": \"cryptoChoice2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  })), jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    for: \"cryptoChoice3\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Crypto Currency Choice 3\"), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }), jsx(\"input\", {\n    ref: elem => cryptoField3 = elem,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"cryptoChoice3\",\n    \"aria-describedby\": \"cryptoChoice3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  })), state !== \"sending\" && state !== \"successful\" && jsx(Button, {\n    onClick: register,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"Submit\"), state === \"validation error\" && jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, errorsState.map(error => jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 44\n    }\n  }, error)))), state === \"successful\" && jsx(\"div\", {\n    className: \"alert alert-success\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"You have registered successfully!\", jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }), jsx(Button, {\n    onClick: () => router.replace('/'),\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, \"Home\")), state === \"unsuccessful\" && jsx(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \"Internal error. Please try again later.\"), state === \"sending\" && jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, \"Loading...\"))))));\n}\n\n;\nconst styles = {\n  banner: {\n    pt: ['140px', '145px', '155px', '170px', null, null, '180px', '215px'],\n    pb: [2, null, 0, null, 2, 0, null, 5],\n    position: 'relative',\n    zIndex: 2,\n    '&::before': {\n      position: 'absolute',\n      content: '\"\"',\n      bottom: 6,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      zIndex: -1\n    },\n    '&::after': {\n      position: 'absolute',\n      content: '\"\"',\n      bottom: '40px',\n      right: 0,\n      height: '100%',\n      width: '100%',\n      zIndex: -1\n    },\n    container: {\n      minHeight: 'inherit',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      mb: ['40px', null, null, null, null, 7]\n    },\n    contentBox: {\n      width: ['100%', '90%', '535px', null, '57%', '60%', '68%', '60%'],\n      mx: 'auto',\n      textAlign: 'left',\n      mb: ['40px', null, null, null, null, 7]\n    },\n    imageBox: {\n      justifyContent: 'center',\n      textAlign: 'center',\n      display: 'inline-flex',\n      mb: [0, null, -6, null, null, '-40px', null, -3],\n      img: {\n        position: 'relative',\n        height: [245, 'auto']\n      }\n    },\n    grid: {\n      mt: [0, null, -6, null, -4],\n      gridGap: ['35px 0px', null, 0, null, null, '30px 35px'],\n      gridTemplateColumns: ['repeat(2,1fr)', null, 'repeat(2,1fr)']\n    }\n  }\n};\nexport default RegistrationScreen;","map":{"version":3,"sources":["/Users/horsthoyzer/Desktop/cryptofrontend/src/pages/RegistrationScreen.js"],"names":["React","useState","jsx","Container","Box","Heading","Text","Button","ThemeProvider","theme","useRouter","validateEmail","email","re","test","validatePassword","password","RegistrationScreen","state","setState","errorsState","setErrorsState","avatarField","firstNameField","lastNameField","emailField","passwordField","cryptoField","addressField","formData","FormData","attachFile","evt","files","Array","from","target","forEach","file","index","append","register","errors","value","length","push","cryptoField1","cryptoField2","cryptoField3","fetch","method","body","then","backendResponse","json","theJson","console","log","catch","error","router","styles","banner","container","contentBox","elem","map","replace","pt","pb","position","zIndex","content","bottom","left","height","width","right","minHeight","display","flexDirection","justifyContent","mb","mx","textAlign","imageBox","img","grid","mt","gridGap","gridTemplateColumns"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport { Container, Box, Heading, Text, Button } from 'theme-ui';\nimport { ThemeProvider } from 'theme-ui';\nimport theme from 'theme';\n\nimport { useRouter } from 'next/router'\n\n\n// RegEx (Regular Expressions)\nconst validateEmail = (email) => {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst validatePassword = (password) => {\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,16}$/;\n    return re.test(password);\n}\n\n\n\n\n\n\n\nfunction RegistrationScreen() {\n\n    // \"initial\", \"sending\", \"successful\", \"unsuccessful\", \"validation error\"\n    const [state, setState] = useState(\"initial\"); \n    const [errorsState, setErrorsState] = useState([]);\n\n    // Declare undefined variables for later assignment (ref props)\n    let avatarField;\n    let firstNameField;\n    let lastNameField;\n    let emailField;\n    let passwordField;\n    let cryptoField;\n    let addressField;\n\n    // To instantiate a FormData object\n    const formData = new FormData();\n\n    const attachFile = (evt) => {\n\n        // Create an array for the files attached\n        const files = Array.from(evt.target.files);\n\n        // Append each file to the formData\n        files.forEach(\n            (file, index) => {\n                formData.append(index, file);\n            }\n        )\n    }\n\n    const register = () => {\n\n        const errors = [];\n\n        // 1. Validate the fields\n        if(firstNameField.value.length == 0) {\n            errors.push(\"Please enter your first name\");\n        }\n        if(lastNameField.value.length == 0) {\n            errors.push(\"Please enter your last name\");\n        }\n        if(!validateEmail(emailField.value)) {\n            errors.push(\"Please enter a valid email address\");\n        }\n        if(!validatePassword(passwordField.value)) {\n            errors.push(\"Please enter a valid password\");\n        }\n\n        // 1.1 If there are errors, set the state to \"validation error\"\n        if(errors.length > 0) {\n            setState(\"validation error\");\n            // Populate the alert box with the errors\n            setErrorsState(errors);\n        }\n        // 1.2 If there are no errors, set the state to \"sending\"\n        else {\n            setState(\"sending\");\n            setErrorsState([]);\n\n            formData.append('firstName', firstNameField.value);\n            formData.append('lastName', lastNameField.value);\n            formData.append('email', emailField.value);\n            formData.append('password', passwordField.value);\n            formData.append('cryptoChoice1', cryptoField1.value);\n            formData.append('cryptoChoice2', cryptoField2.value);\n            formData.append('cryptoChoice3', cryptoField3.value);\n\n            fetch(`http://localhost:3001/user/add`, {\n                method: 'POST',\n                //headers: {\"Content-Type\": \"application/json\"},\n                body: formData\n            })\n            // 2.1 If the submission is successful, set the state \"successful\"\n            .then((backendResponse)=> backendResponse.json())\n            .then((theJson)=>{\n                console.log(theJson);\n                setState(\"successful\");\n            })\n            // 2.2 If the submission is unsuccessful, set the state \"unsuccessful\"\n            .catch((error)=>{\n                console.log(error);\n                setState(\"unsuccessful\");\n            });\n        }\n    }\n\n    const router = useRouter()\n\n    return (\n        <ThemeProvider theme={theme}>\n        <section sx={styles.banner.container} id=\"home\">\n            <Container sx={styles.banner.container}>\n                <Box sx={styles.contentBox}>\n                    <Heading as=\"h1\" variant=\"heroPrimary\">\n                        Want to join our network?\n                    </Heading>\n                    <Text as=\"p\" variant=\"heroSecondary\">\n                        Please provide below information:\n                    </Text>\n                </Box>\n            <Box>\n                <Container>\n                    <Box>\n                        <label for=\"avatar\" className=\"form-label\">Avatar</label>\n                        <br></br>\n                        <input \n                        onChange={attachFile}\n                        ref={ (elem)=>avatarField = elem } type=\"file\" className=\"form-control\" id=\"avatar\" aria-describedby=\"avatar\" />\n                    </Box>\n\n                    <Box>\n                        <label for=\"firstName\" className=\"d-flex my-4 justify-content-between\">First Name</label>\n                        <br></br>\n                        <input ref={ (elem)=>firstNameField = elem } type=\"text\" className=\"form-control\" id=\"firstName\" aria-describedby=\"firstName\"/>\n                    </Box>\n\n                    <Box>\n                        <label for=\"lastName\" className=\"form-label\">Last Name</label>\n                        <br></br>\n                        <input ref={ (elem)=>lastNameField = elem } type=\"text\" className=\"form-control\" id=\"lastName\" aria-describedby=\"lastName\" />\n                    </Box>\n\n                    <Box>\n                        <label for=\"email\" className=\"form-label\">Email address</label>\n                        <br></br>\n                        <input ref={ (elem)=>emailField = elem } type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" />\n                    </Box>\n\n                    <Box>\n                        <label for=\"password\" className=\"form-label\">Password</label>\n                        <br></br>\n                        <input ref={ (elem)=>passwordField = elem } type=\"password\" className=\"form-control\" id=\"password\" aria-describedby=\"password\" />\n                    </Box>\n\n                    <Box>\n                        <label for=\"cryptoChoice1\" className=\"form-label\">Crypto Currency Choice 1</label>\n                        <br></br>\n                        <input ref={ (elem)=>cryptoField1 = elem } type=\"text\" className=\"form-control\" id=\"cryptoChoice1\" aria-describedby=\"cryptoChoice1\" />\n                    </Box>\n\n                    <Box>\n                        <label for=\"cryptoChoice2\" className=\"form-label\">Crypto Currency Choice 2</label>\n                        <br></br>\n                        <input ref={ (elem)=>cryptoField2 = elem } type=\"text\" className=\"form-control\" id=\"cryptoChoice2\" aria-describedby=\"cryptoChoice2\" />\n                    </Box>\n\n                    <Box>\n                        <label for=\"cryptoChoice3\" className=\"form-label\">Crypto Currency Choice 3</label>\n                        <br></br>\n                        <input ref={ (elem)=>cryptoField3 = elem } type=\"text\" className=\"form-control\" id=\"cryptoChoice3\" aria-describedby=\"cryptoChoice3\" />\n                    </Box>\n\n                    {\n                        state !== \"sending\" && state !== \"successful\" &&\n                        <Button onClick={register} variant=\"primary\">Submit</Button>\n                    }\n\n                    { \n                        state === \"validation error\" &&\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                        <ul>\n                        {\n                            errorsState.map(\n                                (error) => <li>{error}</li>\n                            )\n                        }\n                        </ul>\n                        </div>\n                    }\n\n                    {\n                        state === \"successful\" &&\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            You have registered successfully!\n                            <br></br>\n                            <br></br>\n                            <Button onClick={() => router.replace('/')} variant=\"secondary\">Home</Button>\n                        </div>\n                    }\n\n                    {\n                        state === \"unsuccessful\" &&\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            Internal error. Please try again later.\n                        </div>\n                    }\n\n                    {\n                        state === \"sending\" &&\n                        <p>Loading...</p>\n                    }\n\n\n                </Container>\n            </Box>\n            </Container>\n        </section>\n        </ThemeProvider>\n    )\n\n\n};\n\nconst styles = {\n  banner: {\n    pt: ['140px', '145px', '155px', '170px', null, null, '180px', '215px'],\n    pb: [2, null, 0, null, 2, 0, null, 5],\n    position: 'relative',\n    zIndex: 2,\n    '&::before': {\n      position: 'absolute',\n      content: '\"\"',\n      bottom: 6,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      zIndex: -1,\n    },\n    '&::after': {\n      position: 'absolute',\n      content: '\"\"',\n      bottom: '40px',\n      right: 0,\n      height: '100%',\n      width: '100%',\n      zIndex: -1,\n    },\n    container: {\n      minHeight: 'inherit',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      mb: ['40px', null, null, null, null, 7],\n    },\n    contentBox: {\n      width: ['100%', '90%', '535px', null, '57%', '60%', '68%', '60%'],\n      mx: 'auto',\n      textAlign: 'left',\n      mb: ['40px', null, null, null, null, 7],\n    },\n    imageBox: {\n      justifyContent: 'center',\n      textAlign: 'center',\n      display: 'inline-flex',\n      mb: [0, null, -6, null, null, '-40px', null, -3],\n      img: {\n        position: 'relative',\n        height: [245, 'auto'],\n      },\n    },\n    grid: {\n        mt: [0, null, -6, null, -4],\n        gridGap: ['35px 0px', null, 0, null, null, '30px 35px'],\n        gridTemplateColumns: [\n          'repeat(2,1fr)',\n          null,\n          'repeat(2,1fr)',\n        ],\n    },\n},\n\n};\n\n  \n\nexport default RegistrationScreen;"]},"metadata":{},"sourceType":"module"}